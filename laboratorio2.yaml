AWSTemplateFormatVersion: '2010-09-09'
Description: Infraestructura en alta disponibilidad con NGINX usando AWS CloudFormation

Parameters:
  KeyName:
    Description: Nombre del par de llaves SSH
    Type: AWS::EC2::KeyPair::KeyName
    Default: Key pairs
    ConstraintDescription: Debe ser un nombre válido de un KeyPair existente en tu cuenta.

Mappings:
  RegionMap:
    us-east-1:
      AZ1: us-east-1a
      AZ2: us-east-1b

Resources:

  WebVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC-GrupoG8

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref WebVPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref WebVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !FindInMap [RegionMap, !Ref "AWS::Region", AZ1]
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref WebVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !FindInMap [RegionMap, !Ref "AWS::Region", AZ2]
      MapPublicIpOnLaunch: true

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref WebVPC

  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref RouteTable

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permitir acceso HTTP y SSH
      VpcId: !Ref WebVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      ImageId: ami-084568db4383264d4 # Ubuntu Server 24.04 LTS
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt update -y
          sudo apt install nginx -y
          echo "<h1>Grupo 8</h1>" > /var/www/index.html
          sudo systemctl start nginx
          sudo systemctl enable nginx
      Tags:
        - Key: Name
          Value: EC2-Servidor1

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SubnetId: !Ref PublicSubnet2
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      ImageId: ami-084568db4383264d4 # Ubuntu Server 24.04 LTS
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt update -y
          sudo apt install nginx -y
          echo "<h1>Grupo 8</h1>" > /var/www/index.html
          sudo systemctl start nginx
          sudo systemctl enable nginx
      Tags:
        - Key: Name
          Value: EC2-Servidor2

  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Listeners:
        - LoadBalancerPort: 80
          InstancePort: 80
          Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: 2
        UnhealthyThreshold: 5
        Interval: 30
        Timeout: 5
      Instances:
        - !Ref EC2Instance1
        - !Ref EC2Instance2
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      CrossZone: true
      Tags:
        - Key: Name
          Value: ELB-AltaDisponibilidad

Outputs:
  LoadBalancerDNSName:
    Description: URL pública del Load Balancer
    Value: !GetAtt LoadBalancer.DNSName
